name: Deploy Apps Script

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Write OAuth JSON
        run: |
          # Accept either raw JSON or base64-encoded JSON in CLASP_OAUTH_JSON
          RAW_SECRET="${{ secrets.CLASP_OAUTH_JSON }}"
          # Trim leading spaces/newlines for detection
          FIRST_CHAR=$(printf '%s' "$RAW_SECRET" | tr -d '\r' | sed 's/^\s*//' | head -c 1)
          if [ "$FIRST_CHAR" = "{" ]; then
            printf '%s' "$RAW_SECRET" | tr -d '\r' > oauth.json
          else
            printf '%s' "$RAW_SECRET" | tr -d '\r' | base64 -d > oauth.json
          fi
          # Validate JSON to fail fast with a clear error
          jq -e . oauth.json > /dev/null

      - name: Seed clasprc from secret (preferred)
        if: ${{ secrets.CLASP_RC_JSON != '' }}
        run: |
          mkdir -p "$HOME"
          printf '%s' "${{ secrets.CLASP_RC_JSON }}" | tr -d '\r' > $HOME/.clasprc.json
          jq -e . $HOME/.clasprc.json > /dev/null
          echo "Seeded ~/.clasprc.json from secret."

      - name: Verify clasprc exists
        run: |
          if [ ! -f "$HOME/.clasprc.json" ]; then
            echo "~/.clasprc.json not found."
            echo "Provide CLASP_RC_JSON secret (contents of your local ~/.clasprc.json) to enable non-interactive CI."
            echo "Alternatively, re-enable 'clasp login' but it requires manual device auth and will fail in CI."
            exit 1
          fi

      - name: Create .clasp.json
        run: |
          cat <<EOF > .clasp.json
          {
            "scriptId": "${{ secrets.CLASP_SCRIPT_ID }}",
            "rootDir": "src"
          }
          EOF

      - name: Push to Apps Script
        run: npx --yes @google/clasp push --force
